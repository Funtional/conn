<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间应该是对应接口的包名+类名 -->
<mapper namespace="springmvc.dao.WfiNode2bizDao">

    <resultMap id="BaseResultMap" type="WfiNode2biz">
        <id column="pk1" property="pk1"/>
        <result column="nodeid" property="nodeid"/>
        <result column="nodename" property="nodename"/>
        <result column="node_app_url" property="nodeAppUrl"/>
        <result column="node_biz_url" property="nodeBizUrl"/>
        <result column="node_deal_url" property="nodeDealUrl"/>
    </resultMap>
    <!--id应该是接口中的方法，结果类型如没有配置别名则应该使用全名称 -->
    <select id="getWfiNode2bizList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select * from Wfi_Node2biz where pk1 = #{pk1}
        <where>
            <if test="nodename!=null">
                and nodename like concat('%',#{nodename},'%')
            </if>
        </where>
    </select>

    <!-- select元素:专门用来做写查询的SQL. -id属性:唯一标识,用来表示某一条SQL语句 id属性和mapper的namespace唯一的表示了应用中的某一条SQL语句
        -parameterType属性:表示执行该SQL语句需要的参数的类型,建议不写,MyBatis可以自行推断出来.
		-resultType属性:把结果集中的每一行数据封装成什么类型的对象 -->
    <select id="getWfiNode2biz" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from Wfi_Node2biz where pk1 = #{pk1}
	</select>

    <!-- 保存操作
		insert元素:
			useGeneratedKeys属性:是否需要返回自动生成的主键
			keyProperty:把自动生成的主键值设置到对象的哪一个属性上(OID)
	 -->
    <insert id="addWfiNode2biz" useGeneratedKeys="false" keyProperty="pk1"
            parameterType="WfiNode2biz">
		insert into Wfi_Node2biz (pk1, nodeid, nodename, node_app_url, node_biz_url, node_deal_url) VALUES(#{pk1}, #{nodeid}, #{nodename}, #{nodeAppUrl}, #{nodeBizUrl}, #{nodeDealUrl})
	</insert>

    <!-- 删除操作 -->
    <delete id="deleteWfiNode2biz" parameterType="java.lang.String">
		DELETE FROM Wfi_Node2biz WHERE pk1 = #{pk1}
	</delete>
</mapper>